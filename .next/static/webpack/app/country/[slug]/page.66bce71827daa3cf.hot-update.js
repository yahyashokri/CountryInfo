"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/country/[slug]/page",{

/***/ "(app-pages-browser)/./components/Map.tsx":
/*!****************************!*\
  !*** ./components/Map.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ OSMMap)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-leaflet */ \"(app-pages-browser)/./node_modules/react-leaflet/lib/MapContainer.js\");\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-leaflet */ \"(app-pages-browser)/./node_modules/react-leaflet/lib/TileLayer.js\");\n/* harmony import */ var react_leaflet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-leaflet */ \"(app-pages-browser)/./node_modules/react-leaflet/lib/GeoJSON.js\");\n/* harmony import */ var leaflet_dist_leaflet_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! leaflet/dist/leaflet.css */ \"(app-pages-browser)/./node_modules/leaflet/dist/leaflet.css\");\n/* harmony import */ var osmtogeojson__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! osmtogeojson */ \"(app-pages-browser)/./node_modules/osmtogeojson/index.js\");\n/* harmony import */ var osmtogeojson__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(osmtogeojson__WEBPACK_IMPORTED_MODULE_3__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction OSMMap(param) {\n    let { osmLink } = param;\n    _s();\n    const [geoJson, setGeoJson] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Extract relation id and fetch geometry from Overpass API.\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"OSMMap.useEffect\": ()=>{\n            // Use a case-insensitive regex to extract the relation ID.\n            const match = osmLink.match(/\\/relation\\/(\\d+)(\\/|$)/i);\n            if (!match) {\n                setError(\"Invalid OSM URL format. Expected a relation URL.\");\n                return;\n            }\n            const relationId = match[1];\n            // Overpass API query to get full geometry data for the relation.\n            const overpassUrl = \"https://overpass-api.de/api/interpreter?data=[out:json];relation(\".concat(relationId, \");out geom;\");\n            fetch(overpassUrl).then({\n                \"OSMMap.useEffect\": (response)=>{\n                    if (!response.ok) {\n                        throw new Error(\"Failed to fetch data from Overpass API\");\n                    }\n                    return response.json();\n                }\n            }[\"OSMMap.useEffect\"]).then({\n                \"OSMMap.useEffect\": (data)=>{\n                    if (!data.elements || data.elements.length === 0) {\n                        throw new Error(\"No relation data found\");\n                    }\n                    // Convert the Overpass JSON to GeoJSON.\n                    const geojson = osmtogeojson__WEBPACK_IMPORTED_MODULE_3___default()(data);\n                    setGeoJson(geojson);\n                }\n            }[\"OSMMap.useEffect\"]).catch({\n                \"OSMMap.useEffect\": (err)=>{\n                    setError(err.toString());\n                }\n            }[\"OSMMap.useEffect\"]);\n        }\n    }[\"OSMMap.useEffect\"], [\n        osmLink\n    ]);\n    if (error) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-4 bg-red-100 text-red-700\",\n            children: [\n                \"Error: \",\n                error\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\YahyaShokri\\\\OneDrive\\\\Desktop\\\\ASPA project\\\\asp_frontend_task_final_PRO\\\\components\\\\Map.tsx\",\n            lineNumber: 55,\n            columnNumber: 7\n        }, this);\n    }\n    if (!geoJson) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Loading map boundaries...\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\YahyaShokri\\\\OneDrive\\\\Desktop\\\\ASPA project\\\\asp_frontend_task_final_PRO\\\\components\\\\Map.tsx\",\n            lineNumber: 62,\n            columnNumber: 12\n        }, this);\n    }\n    // Compute a rough center from the first feature's coordinates.\n    // Note: osmtogeojson returns coordinates as [lon, lat].\n    let center = [\n        0,\n        0\n    ];\n    if (geoJson.features && geoJson.features.length > 0) {\n        const feature = geoJson.features[0];\n        let points = [];\n        // Handle both Polygon and MultiPolygon types.\n        if (feature.geometry.type === \"Polygon\") {\n            // Use the first ring of the polygon.\n            points = feature.geometry.coordinates[0];\n        } else if (feature.geometry.type === \"MultiPolygon\") {\n            // Use the first ring of the first polygon.\n            points = feature.geometry.coordinates[0][0];\n        }\n        if (points.length > 0) {\n            let sumLon = 0, sumLat = 0;\n            points.forEach((pt)=>{\n                sumLon += pt[0]; // longitude\n                sumLat += pt[1]; // latitude\n            });\n            center = [\n                sumLat / points.length,\n                sumLon / points.length\n            ];\n        }\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_leaflet__WEBPACK_IMPORTED_MODULE_4__.MapContainer, {\n        center: center,\n        zoom: 0,\n        style: {\n            height: \"400px\",\n            width: \"100%\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_leaflet__WEBPACK_IMPORTED_MODULE_5__.TileLayer, {\n                attribution: '\\xa9 <a href=\"https://www.openstreetmap.org/copyright\">   OpenStreetMap</a> contributors',\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\YahyaShokri\\\\OneDrive\\\\Desktop\\\\ASPA project\\\\asp_frontend_task_final_PRO\\\\components\\\\Map.tsx\",\n                lineNumber: 94,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_leaflet__WEBPACK_IMPORTED_MODULE_6__.GeoJSON, {\n                data: geoJson,\n                style: ()=>({\n                        color: \"blue\",\n                        weight: 2,\n                        fillColor: \"lightblue\",\n                        fillOpacity: 0.3\n                    })\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\YahyaShokri\\\\OneDrive\\\\Desktop\\\\ASPA project\\\\asp_frontend_task_final_PRO\\\\components\\\\Map.tsx\",\n                lineNumber: 100,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\YahyaShokri\\\\OneDrive\\\\Desktop\\\\ASPA project\\\\asp_frontend_task_final_PRO\\\\components\\\\Map.tsx\",\n        lineNumber: 93,\n        columnNumber: 5\n    }, this);\n}\n_s(OSMMap, \"LJDDmz9fuBCbZwUNzrtSjWiEY1I=\");\n_c = OSMMap;\nvar _c;\n$RefreshReg$(_c, \"OSMMap\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/Map.tsx\n"));

/***/ })

});